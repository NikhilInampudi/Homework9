name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.12] # Define Python versions here
    steps:
      - uses: actions/checkout@v4
        # Check out the code from the repository

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          # Set up the Python environment for the specified version

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          # Cache Python packages to speed up builds

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install the dependencies from requirements.txt

      - name: Run tests with Pytest
        run: pytest
        # Run tests using Pytest

  build-and-push-docker:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # Set up Docker Buildx for building multi-platform images

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        # Log in to DockerHub using credentials from GitHub Secrets

      - name: Build and push Docker image
        uses: docker/build-push-action@v5 # Specify the exact version
        with:
          push: true
          tags: ninam001/qr_code:${{ github.sha }}  # Tag with the commit SHA
          platforms: linux/amd64,linux/arm64 # Multi-platform support
          cache-from: type=registry,ref=ninam001/qr_code:cache
          cache-to: type=inline,mode=max
        # Build and push Docker image

      - name: Scan the Docker image
        uses: aquasecurity/trivy-action@master  # Updated to a specific stable version
        with:
          image-ref: 'ninam001/qr_code:${{ github.sha }}'
          format: 'table'
          exit-code: 1  # Fail the job if vulnerabilities are found
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
